version: "3.8"

services:
  postgres:
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - pgdata:/store/db_data

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    depends_on:
      - postgres

  web:
    env_file:
      - .env
    build:
      context: ./
    ports:
      - 8000:8000
    depends_on:
      - reverse-proxy
      - postgres
    labels:
      - traefik.http.routers.web.rule=Host(`stepik-store.localhost`)
      - traefik.http.middlewares.web.headers.accesscontrolallowheaders=Keep-Alive,X-Requested-With,Cache-Control,Content-Type
      - traefik.http.middlewares.web.headers.accesscontrolallowmethods=GET,POST,OPTIONS
      - traefik.http.routers.backend-api.middlewares=backend-api@docker
      - traefik.http.middlewares.backend-api.headers.accesscontrolalloworiginlist=*
      - traefik.http.middlewares.backend-api.headers.accesscontrolallowcredentials=true

  minio:
    image: minio/minio:latest
    command:
      - server
      - /data
      - --console-address
      - ":9001"
    env_file:
      - .env
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
      MINIO_BROWSER_REDIRECT_URL: http://minio.localhost
    volumes:
      - ./deploy/minio/data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - reverse-proxy
    labels:
      - traefik.http.routers.minio.rule=Host(`minio.localhost`)
      - traefik.http.routers.minio-console.rule=Host(`minio-console.localhost`)

  reverse-proxy:
    image: traefik
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      #
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  pgdata:
    driver: local
  redis:
    driver: local
  minio-storage:
    driver: local
